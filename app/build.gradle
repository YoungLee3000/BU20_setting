apply plugin: 'com.android.application'
apply plugin: 'com.huawei.agconnect'

android {
    compileSdkVersion 28


    defaultConfig {
        applicationId "com.nlscan.uhf.bu"
        minSdkVersion 22
        targetSdkVersion 28
        versionCode 45
        versionName "v4.5"


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    signingConfigs {
        config {
            keyAlias 'nlsplatformkey'
            keyPassword 'android'
            storeFile file('./nls.keystore')
            storePassword 'android'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            signingConfig signingConfigs.config
        }
    }
    buildToolsVersion = '29.0.2'

    //自定义打包时apk名称
    applicationVariants.all { variant ->
        variant.outputs.all { output ->// each 改为 all
            outputFileName = "UHF_Settings_BU.apk"
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
//    implementation files('src/main/system-libs/framework_4_4_2_classes.jar')
//    compileOnly files('src/main/system-libs/framework_4_4_2_classes_ex.jar')
    compileOnly files('src/main/system-libs/nlscan_sdk_master_eng.jar')
    implementation fileTree(dir: 'src\\main\\libs', include: ['*.aar', '*.jar'], exclude: [])
    implementation project(path: ':libzxing_BU')
    // Add dependencies.
    implementation 'com.huawei.agconnect:agconnect-core:1.3.1.300'
    implementation 'com.huawei.hms:scan:1.2.5.300'
    implementation 'com.alibaba:fastjson:1.2.68'
    implementation fileTree(dir: 'src\\main\\system-libs', include: ['*.aar', '*.jar'], exclude: [])
}

preBuild {
    doLast {
        def imlFile = file(project.name + ".iml")
        println 'Change ' + project.name + '.iml order'
        try {
            def parsedXml = (new XmlParser()).parse(imlFile)
            def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
            parsedXml.component[1].remove(jdkNode)
            def sdkString = "Android API " + android.compileSdkVersion.substring("android-".length()) + " Platform"
            new groovy.util.Node(parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': sdkString, 'jdkType': 'Android SDK'])
            groovy.xml.XmlUtil.serialize(parsedXml, new FileOutputStream(imlFile))
        } catch (FileNotFoundException e) {
            // nop, iml not found
        }
    }
}
